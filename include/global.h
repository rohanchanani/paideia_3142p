extern double WHEEL_RADIUS;
extern bool intakeSpinning;
extern bool flywheelSpinning;
extern double flywheelScaler;
extern bool isBlue;
extern double FLYWHEEL_RPM;
extern int extensionVal;
extern bool extended;
extern double currentX;
extern double currentY;
extern double fieldOrientation;
extern double SCALE_FACTOR;
extern double NEW_SCALE_FACTOR;

extern double rad(double degrees);
extern void flyThread();
extern void changeColor();
extern void vexcodeInit(void);
extern void updateExtension();
extern void setIntake(int intakeSpeed);
extern void switchIntake();
extern void switchFlywheel();
extern void switchPneumatic();
extern void launch();
extern void decrementFlywheel();
extern void incrementFlywheel();
extern double calcRotation();
extern bool isDoneDriving(double travelDegrees);
extern void printCoords();
extern void odom();
extern double PID(double initialHeading, double currentError, double scaleFactor, double newScaleFactor);
extern void timeDriveStraight(double timeAmount, double targetRotation, double driveVelocity, double scaleFactor=SCALE_FACTOR, double newScaleFactor = NEW_SCALE_FACTOR);
extern void driveStraight(double travelDistance, double targetRotation, double taperDistance = 3, double timeout = 3, bool taper = true, double maxVelocity = 12, double minVelocity = 0, double scaleFactor = SCALE_FACTOR, double newScaleFactor = NEW_SCALE_FACTOR, int shouldPID = 1);
extern bool convertColor();
extern void oldTurnRoller(double timeout = 10);
extern void turnHeading(int targetRotation, bool fullTurn = false, double timeout=2);
extern void turnRoller(double target = 0, double initialTime = 1, bool repeat=true);
extern void match_load();
extern void skills();
extern void pre_auton(void);
extern void a_left();
extern void auton_left();
extern void a_right();
extern void solo();
extern void autonomous(void);
extern void usercontrol(void);
extern void old_skills();